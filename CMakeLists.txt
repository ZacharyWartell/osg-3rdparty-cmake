CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

# ZJW: this is the default/expected layout of source tree from generated by the git submodules
get_filename_component( AUTO_DEFAULT_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/.." ABSOLUTE )
get_filename_component( AUTO_CMAKE_INSTALL_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/../install" ABSOLUTE )
SET( CMAKE_INSTALL_PREFIX "${AUTO_CMAKE_INSTALL_PREFIX}" CACHE PATH "Installion prefix")
file(MAKE_DIRECTORY "${CMAKE_INSTALL_PREFIX}")
MESSAGE ( STATUS ${CMAKE_INSTALL_PREFIX} )

PROJECT(OpenscenegraphThirdParty)

# Only enable release and debug builds
IF(CMAKE_CONFIGURATION_TYPES)
  SET(CMAKE_CONFIGURATION_TYPES Debug Release)
  SET(CMAKE_CONFIGURATION_TYPES "${CMAKE_CONFIGURATION_TYPES}" CACHE STRING
    "Reset the configurations to what we need"
    FORCE)
ENDIF()

# Generate folder name for install
IF(${CMAKE_SIZEOF_VOID_P} EQUAL 8)
  SET(BITS "x64")
ELSEIF (${CMAKE_SIZEOF_VOID_P} EQUAL 4)
  SET(BITS "win32")
ENDIF()

IF (MSVC)
  IF (${MSVC_VERSION} EQUAL 1600)
    SET(COMPILER "MSVS_2010") # Visual Studio 2010
  ELSEIF (${MSVC_VERSION} EQUAL 1700)
    SET(COMPILER "v110") # Visual Studio 2012
  ELSEIF (${MSVC_VERSION} EQUAL 1800)
    SET(COMPILER "v120") # Visual Studio 2013
  ELSEIF (${MSVC_VERSION} EQUAL 1900)
    SET(COMPILER "MSVS_2015") # Visual Studio 2015
  ENDIF()

  SET(dirname "${COMPILER}/${BITS}")
ENDIF()

IF(MINGW)
  SET(COMPILER "mingw")

  SET(dirname "${COMPILER}-${BITS}")
ENDIF()



#Set directories
IF (MINGW)
    # ZJW: original code
    SET(EXECUTABLE_OUTPUT_PATH "${PROJECT_BINARY_DIR}/3rdParty/${dirname}/bin")
    SET(ARCHIVE_OUTPUT_PATH "${PROJECT_BINARY_DIR}/3rdParty/${dirname}/lib")
    SET(LIBRARY_OUTPUT_PATH "${PROJECT_BINARY_DIR}/lib")
    SET(INCLUDE_OUTPUT_PATH "${PROJECT_BINARY_DIR}/3rdParty/${dirname}/include")
    #MESSAGE ( STATUS ${INCLUDE_OUTPUT_PATH} )
ELSE()
    # ZJW: 1/13/2017 - [experimental] 
    # removed code if I don't reuse it within 2 months
    # \todo I'm trying to get cmake generated MSVS to install files to a controllable directory but it always
    # installing them into the same location ....

    SET(EXECUTABLE_OUTPUT_PATH "${AUTO_CMAKE_INSTALL_PREFIX}/${dirname}/bin")
    SET(ARCHIVE_OUTPUT_PATH "${AUTO_CMAKE_INSTALL_PREFIX}/${dirname}/lib")
    SET(LIBRARY_OUTPUT_PATH "${AUTO_CMAKE_INSTALL_PREFIX}/${dirname}/lib")
    SET(INCLUDE_OUTPUT_PATH "${AUTO_CMAKE_INSTALL_PREFIX}/${dirname}/include")
    
    # ZJW: Not sure why I had to do this explicitly, original CMake code seemed to create the
    # various /Debug, /Release directories automatically.  Or perhaps it is MSVS that was
    # creating them and after my changes MSVS is not anymore...????
    foreach(CONFIG ${CMAKE_CONFIGURATION_TYPES})
	file(MAKE_DIRECTORY "${AUTO_CMAKE_INSTALL_PREFIX}/${dirname}/lib/${CONFIG}")
	file(MAKE_DIRECTORY "${AUTO_CMAKE_INSTALL_PREFIX}/${dirname}/bin/${CONFIG}")
    endforeach()
ENDIF()

SET(DEFAULT_SOURCE_DIR "${AUTO_DEFAULT_SOURCE_DIR}" CACHE PATH "Path where to find 3rdparty distributions are")
SET(ZLIB_SOURCE_DIR "${DEFAULT_SOURCE_DIR}/zlib" CACHE PATH "Path where to find ZLIB source")
SET(LIBPNG_SOURCE_DIR "${DEFAULT_SOURCE_DIR}/libpng" CACHE PATH "Path where to find LIBPNG source")
SET(LIBJPEG_SOURCE_DIR "${DEFAULT_SOURCE_DIR}/libjpeg" CACHE PATH "Path where to find LIBJPEG source")
SET(LIBTIFF_SOURCE_DIR "${DEFAULT_SOURCE_DIR}/libtiff" CACHE PATH "Path where to find LIBTIFF source")
SET(FREETYPE_SOURCE_DIR "${DEFAULT_SOURCE_DIR}/freetype" CACHE PATH "Path where to find FREETYPE source")
SET(GLUT_SOURCE_DIR "${DEFAULT_SOURCE_DIR}/glut" CACHE PATH "Path where to find GLUT source")
SET(GIFLIB_SOURCE_DIR "${DEFAULT_SOURCE_DIR}/libgif" CACHE PATH "Path where to find GIFLIB source")
SET(MINIZIP_SOURCE_DIR "${DEFAULT_SOURCE_DIR}/minizip" CACHE PATH "Path where to find MINIZIP source")
SET(CURL_SOURCE_DIR "${DEFAULT_SOURCE_DIR}/curl" CACHE PATH "Path where to find cURL source")

# Check dependencies for LIBPNG
IF (LIBPNG_SOURCE_DIR)
  IF(NOT ZLIB_SOURCE_DIR)
    MESSAGE(FATAL_ERROR "Error: LIBPNG depends on ZLIB and no ZLIB path has been set")
  ENDIF()
ENDIF ()

# Check dependencies for LIBTIFF
IF(LIBTIFF_SOURCE_DIR)
  IF(NOT ZLIB_SOURCE_DIR)
    MESSAGE(FATAL_ERROR "Error: LIBTIFF depends on ZLIB and no ZLIB path has been set")
  ENDIF()

  IF(NOT LIBJPEG_SOURCE_DIR)
    MESSAGE(FATAL_ERROR "Error: LIBTIFF depends on LIBJPEG and no LIBJPEG path has been set")
  ENDIF()
ENDIF()

# Check dependencies for MINIZIP
IF (MINIZIP_SOURCE_DIR)
  IF(NOT ZLIB_SOURCE_DIR)
    MESSAGE(FATAL_ERROR "Error: MINIZIP depends on ZLIB and no ZLIB path has been set")
  ENDIF()
ENDIF ()

# Add libraries
IF (ZLIB_SOURCE_DIR)
  ADD_SUBDIRECTORY(zlib)
ENDIF()

IF (LIBPNG_SOURCE_DIR)
  ADD_SUBDIRECTORY(libpng)
ENDIF()

IF (LIBJPEG_SOURCE_DIR)
  ADD_SUBDIRECTORY(libjpeg)
ENDIF()

IF (LIBTIFF_SOURCE_DIR)
  ADD_SUBDIRECTORY(libtiff)
ENDIF()

IF (FREETYPE_SOURCE_DIR)
  ADD_SUBDIRECTORY(freetype)
ENDIF()

IF (GLUT_SOURCE_DIR)
  ADD_SUBDIRECTORY(glut)
ENDIF()

IF (GIFLIB_SOURCE_DIR)
  ADD_SUBDIRECTORY(giflib)
ENDIF()

IF (MINIZIP_SOURCE_DIR)
  ADD_SUBDIRECTORY(minizip)
ENDIF()

IF (CURL_SOURCE_DIR)
  ADD_SUBDIRECTORY(curl)
ENDIF()
